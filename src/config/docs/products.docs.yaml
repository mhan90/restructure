components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: An autogenerated ID by mongo db
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: number
          description: Product price
        thumbnails:
          type: array
          description: array of urls of product thumbnails
        code:
          type: string
          description: Product unique code
        stock:
          type: number
          description: Product stock
        category:
          type: string
          description: Product category
        status:
          type: boolean
          description: Product status
      example:
        _id: 64dad7af11e5698104e4762d
        title: Nordic Chair
        description: A chair with nordic style
        price: 100
        thumbnails: ["/url/sample/chair1.png", "/url/sample/chair2.png"]
        code: ABC#123
        stock: 1000
        category: Furniture
        status: true
  responses:
    postSuccess:
      type: object
      properties:
        payload:
          type: array
          items:
            $ref: '#components/schemas/Product'
        totalDocs:
          type: number
        limit:
          type: number
        totalPages:
          type: number
        page:
          type: number
        pagingCounter:
          type: number
        hasPrevPage:
          type: boolean
        hasNextPage:
          type: boolean
        prevPage:
          type: number
        nextPage:
          type: number
        prevLink:
          type: string
        nextLink:
          type: string
        status:
          type: boolean
paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        "200":
          description: Ok, all products were gathered from database
          content:
            application/json:
              schema:
                $ref: '#components/responses/postSuccess'               
        "500":
          description: Internal server error, usually caused by a bad query or a connection failure with the database
    post:
      summary: Creates a new product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Product'
      responses:
        "201":
          description: Product successfuly created
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbbiden, user has no permissions
        "500":
          description: Server side error